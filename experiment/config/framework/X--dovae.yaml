# @package _group_
name: dovae
module:
  _target_: disent.frameworks.vae.unsupervised.DataOverlapVae
  beta: ${framework.beta}
  # tvae: triplet stuffs
  triplet_loss: triplet  # triplet, triplet_sigmoid
  triplet_margin_min: 0.01
  triplet_margin_max: 1
  triplet_scale: 1
  triplet_p: 2
  # tvae: no loss from decoder -> encoder
  # TODO: investigate, very interesting result when detach=FALSE, triplet_margin_max=10, p=2, z_mode=samples and triplet_mode = triplet ||| latent factors are learnt in order of visual importance
  detach: TRUE  # FALSE
  detach_decoder: TRUE
  detach_no_kl: FALSE
  detach_logvar: 0  # set to NULL to disable fixed value
  # adatvae: what version of triplet to use
  triplet_mode: 'lerp_trip_to_mse_ada'  # ada_lerp_mul_triplet, ada_lerp_mul_lerp_triplet, lerp_trip_to_mse_ada, lerp_trip_to_mse_ada_lerp, ada_p_orig_lerp
  # adatvae: annealing
  lerp_step_start: 7200
  lerp_step_end: ${trainer.steps}
  lerp_goal: 0.25 # 1.0
  # dovae
  overlap_triplet_mode: 'ada_triplet'
  overlap_num: 4096
  overlap_z_mode: 'samples'
  overlap_mine_triplet_mode: 'none'  # none, hard_neg, semi_hard, hard_pos, easy_pos, random_hard_neg_or_hard_pos <- etc, dynamically evaluated, can chain multiple "_or_"s
  overlap_mine_ratio: 0.1

# settings used elsewhere
data_wrap_mode: single
model_z_multiplier: 2
