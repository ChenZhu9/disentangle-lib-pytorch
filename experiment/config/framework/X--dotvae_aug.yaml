# @package _group_
name: do_tvae_aug
module:
  _target_: disent.frameworks.vae.unsupervised.DataOverlapTripletVae
  beta: ${framework.beta}
  # tvae: triplet stuffs
  triplet_loss: triplet
  triplet_margin_min: 0.001
  triplet_margin_max: 1
  triplet_scale: 0.1
  triplet_p: 1
  # tvae: no loss from decoder -> encoder
  detach: FALSE
  detach_decoder: FALSE
  detach_no_kl: FALSE
  detach_logvar: NULL  # set to NULL to disable fixed value
  # adavae
  ada_average_mode: gvae
  ada_thresh_mode: dist          # Only works for: adat_share_mask_mode == "posterior" --- kl, symmetric_kl, dist, sampled_dist
  ada_thresh_ratio: 0.5          # >> USE WITH A SCHEDULE <<
  # ada_tvae - loss
  adat_triplet_share_scale: 0.95 # >> USE WITH A SCHEDULE << only works for: adat_triplet_loss == "triplet_hard_neg_ave_scaled"
  # ada_tvae - averaging
  adat_share_mask_mode: posterior
  # dotvae
  overlap_num: 4096
  overlap_mine_ratio: 0.1
  overlap_mine_triplet_mode: 'none'  # none, hard_neg, semi_hard_neg, hard_pos, easy_pos, random_hard_neg_or_hard_pos <- etc, dynamically evaluated, can chain multiple "_or_"s
  # dotvae -- augment
  overlap_augment_mode: 'augment'
  overlap_augment:
    _target_: disent.transform.FftBoxBlur
    p: 1.0
    radius: [16, 16]
    random_mode: "same"
    random_same_xy: TRUE

#      - _target_: disent.transform.FftGaussianBlur
#        p: 1.0
#        sigma: [0.1, 10.0]
#        truncate: 3.0
#        random_mode: "batch"
#        random_same_xy: FALSE
#      - _target_: kornia.augmentation.RandomCrop
#        p: 1.0
#        size: [64, 64]
#        padding: 7
#      - _target_: kornia.augmentation.RandomPerspective
#        p: 0.5
#        distortion_scale: 0.15
#      - _target_: kornia.augmentation.RandomRotation
#        p: 0.5
#        degrees: 9

# settings used elsewhere
data_wrap_mode: single
model_z_multiplier: 2
